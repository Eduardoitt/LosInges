@model LosInges.Models.Empleado
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Empleado</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApPat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApPat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApPat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApMat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApMat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApMat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdDepartamento, "IDepartamento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.IdDepartamento, new SelectList(ViewBag.ListDepa, "IdDepa", "DesDepa"), htmlAttributes: new { @class = "custom-select custom-select-md " })
                @Html.ValidationMessageFor(model => model.IdDepartamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPuesto, "Puesto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.IdPuesto, new SelectList(ViewBag.ListPues, "IdPues", "DesPues"), htmlAttributes: new { @class = "custom-select custom-select-md " })
                @Html.ValidationMessageFor(model => model.IdPuesto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="row" >
    <div class="col-md-8">
        <div class="card ">
            <div class="card-header card-header-info card-header-text">
                <div class="card-icon">
                    <i class="material-icons">people</i>
                </div>
                <h4 class="card-title">Empleados</h4>
            </div>
            <div class="card-body ">
                <div class="row col-md-12">
                </div>
                <br />
                <div class="row">

                    <div class="col-md-12">
                        @Html.EJS().Grid("GridEmpleado").DataSource((IEnumerable<object>)ViewBag.ListEmp).RowSelected("EmpleadoSe").AllowFiltering().AllowTextWrap().EnableAutoFill().AllowResizing(true).Columns(col =>
                   {
                       col.Field("IdEmp").Visible(false).Add();
                       col.Field("NomEmp").HeaderText("Descripcion").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                       col.Field("ApPat").HeaderText("NoParte").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                       col.Field("ApMat").HeaderText("NoParte").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                       col.Field("DepaEmp").HeaderText("NoParte").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
                       col.Field("PuestoEmp").HeaderText("NoParte").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();

                   }).AllowPaging().PageSettings(page => { page.PageSize(5); }).Render()
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function EmpleadoSe(args) {
        var grid = document.getElementById("GridEmpleado").ej2_instances[0];
    }
</script>